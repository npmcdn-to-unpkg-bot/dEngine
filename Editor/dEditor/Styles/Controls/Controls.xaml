<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:dEditor.Styles"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
                    xmlns:explorer="clr-namespace:dEditor.Widgets.Explorer">

    <ControlTemplate x:Key="ToolBarTemplate" TargetType="{x:Type ToolBar}">
        <Grid x:Name="Grid" Margin="3,1,1,1" SnapsToDevicePixels="True">
            <Grid x:Name="OverflowGrid" HorizontalAlignment="Right">
                <ToggleButton x:Name="OverflowButton" ClickMode="Press" FocusVisualStyle="{x:Null}"
                              IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                              IsEnabled="{TemplateBinding HasOverflowItems}">
                    <ToggleButton.Style>
                        <Style TargetType="{x:Type ToggleButton}">
                            <Setter Property="Background" Value="White" />
                            <Setter Property="MinHeight" Value="0" />
                            <Setter Property="MinWidth" Value="0" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Border x:Name="Bd" Background="White" CornerRadius="0,3,3,0"
                                                SnapsToDevicePixels="True">
                                            <Canvas HorizontalAlignment="Right" Height="7" Margin="7,2,2,2"
                                                    SnapsToDevicePixels="True" VerticalAlignment="Bottom" Width="6">
                                                <Path Data="M1,1.5L6,1.5" Stroke="White" />
                                                <Path Data="M0,0.5L5,0.5" Stroke="{TemplateBinding Foreground}" />
                                                <Path Data="M0.5,4L6.5,4 3.5,7z" Fill="White" />
                                                <Path Data="M-0.5,3L5.5,3 2.5,6z" Fill="{TemplateBinding Foreground}" />
                                            </Canvas>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" TargetName="Bd"
                                                        Value="{StaticResource AccentPrimary}" />
                                                <Setter Property="Foreground" Value="White" />
                                            </Trigger>
                                            <Trigger Property="IsKeyboardFocused" Value="True">
                                                <Setter Property="Background" TargetName="Bd" Value="#210080FF" />
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Foreground" Value="#FF6D6D6D" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding}" Value="true">
                                    <Setter Property="Background"
                                            Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
                <Popup x:Name="OverflowPopup" AllowsTransparency="True" Focusable="False"
                       IsOpen="{Binding IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                       Placement="Bottom" StaysOpen="False">
                    <Grid x:Name="Shdw" Background="Transparent">
                        <Grid.Effect>
                            <DropShadowEffect />
                        </Grid.Effect>
                        <Border x:Name="ToolBarSubMenuBorder" BorderBrush="#CCC" BorderThickness="1" Background="White"
                                RenderOptions.ClearTypeHint="Enabled">
                            <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel"
                                                  KeyboardNavigation.DirectionalNavigation="Cycle"
                                                  FocusVisualStyle="{x:Null}" Focusable="True" Margin="2"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  KeyboardNavigation.TabNavigation="Cycle" WrapWidth="200" />
                        </Border>
                    </Grid>
                </Popup>
            </Grid>
            <Border x:Name="MainPanelBorder" BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" Background="White"
                    Padding="{TemplateBinding Padding}">
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="Margin" Value="0,0,11,0" />
                        <Setter Property="CornerRadius" Value="3" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding}" Value="true">
                                <Setter Property="CornerRadius" Value="0" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                    <Thumb x:Name="ToolBarThumb" Margin="-3,-1,0,0" Padding="6,5,1,6" Width="10">
                        <Thumb.Style>
                            <Style TargetType="{x:Type Thumb}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                            <Border Background="Transparent" Padding="{TemplateBinding Padding}"
                                                    SnapsToDevicePixels="True">
                                                <Rectangle>
                                                    <Rectangle.Fill>
                                                        <DrawingBrush TileMode="Tile" Viewbox="0,0,4,4"
                                                                      Viewport="0,0,4,4" ViewportUnits="Absolute"
                                                                      ViewboxUnits="Absolute">
                                                            <DrawingBrush.Drawing>
                                                                <DrawingGroup>
                                                                    <GeometryDrawing Brush="White"
                                                                                     Geometry="M1,1L1,3 3,3 3,1z" />
                                                                    <GeometryDrawing Brush="#FF6D6D6D"
                                                                                     Geometry="M0,0L0,2 2,2 2,0z" />
                                                                </DrawingGroup>
                                                            </DrawingBrush.Drawing>
                                                        </DrawingBrush>
                                                    </Rectangle.Fill>
                                                </Rectangle>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Cursor" Value="SizeAll" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Thumb.Style>
                    </Thumb>
                    <ContentPresenter x:Name="ToolBarHeader" ContentTemplate="{TemplateBinding HeaderTemplate}"
                                      Content="{TemplateBinding Header}"
                                      ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header"
                                      HorizontalAlignment="Center" Margin="4,0"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="Center" />
                    <ToolBarPanel x:Name="PART_ToolBarPanel" IsItemsHost="True" Margin="0,1,2,2"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </DockPanel>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsOverflowOpen" Value="True">
                <Setter Property="IsEnabled" TargetName="ToolBarThumb" Value="False" />
            </Trigger>
            <Trigger Property="Header" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="ToolBarHeader" Value="Collapsed" />
            </Trigger>
            <Trigger Property="ToolBarTray.IsLocked" Value="True">
                <Setter Property="Visibility" TargetName="ToolBarThumb" Value="Collapsed" />
            </Trigger>
            <Trigger Property="HasDropShadow" SourceName="OverflowPopup" Value="True">
                <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5" />
                <Setter Property="SnapsToDevicePixels" TargetName="Shdw" Value="True" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Margin" TargetName="Grid" Value="1,3,1,1" />
                <Setter Property="Style" TargetName="OverflowButton">
                    <Setter.Value>
                        <Style TargetType="{x:Type ToggleButton}">
                            <Setter Property="Background" Value="#FFEEF5FD" />
                            <Setter Property="MinHeight" Value="0" />
                            <Setter Property="MinWidth" Value="0" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Border x:Name="Bd" Background="{TemplateBinding Background}"
                                                CornerRadius="0,0,3,3" SnapsToDevicePixels="True">
                                            <Canvas HorizontalAlignment="Right" Height="6" Margin="2,7,2,2"
                                                    SnapsToDevicePixels="True" VerticalAlignment="Bottom" Width="7">
                                                <Path Data="M1.5,1L1.5,6" Stroke="White" />
                                                <Path Data="M0.5,0L0.5,5" Stroke="{TemplateBinding Foreground}" />
                                                <Path Data="M3.5,0.5L7,3.5 4,6.5z" Fill="White" />
                                                <Path Data="M3,-0.5L6,2.5 3,5.5z" Fill="{TemplateBinding Foreground}" />
                                            </Canvas>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" TargetName="Bd" Value="#210080FF" />
                                            </Trigger>
                                            <Trigger Property="IsKeyboardFocused" Value="True">
                                                <Setter Property="Background" TargetName="Bd" Value="#210080FF" />
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Foreground" Value="#FF6D6D6D" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding}" Value="true">
                                    <Setter Property="Background"
                                            Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Height" TargetName="ToolBarThumb" Value="10" />
                <Setter Property="Width" TargetName="ToolBarThumb" Value="Auto" />
                <Setter Property="Margin" TargetName="ToolBarThumb" Value="-1,-3,0,0" />
                <Setter Property="Padding" TargetName="ToolBarThumb" Value="5,6,6,1" />
                <Setter Property="Margin" TargetName="ToolBarHeader" Value="0,0,0,4" />
                <Setter Property="Margin" TargetName="PART_ToolBarPanel" Value="1,0,2,2" />
                <Setter Property="DockPanel.Dock" TargetName="ToolBarThumb" Value="Top" />
                <Setter Property="DockPanel.Dock" TargetName="ToolBarHeader" Value="Top" />
                <Setter Property="HorizontalAlignment" TargetName="OverflowGrid" Value="Stretch" />
                <Setter Property="VerticalAlignment" TargetName="OverflowGrid" Value="Bottom" />
                <Setter Property="Placement" TargetName="OverflowPopup" Value="Right" />
                <Setter Property="Margin" TargetName="MainPanelBorder" Value="0,0,0,11" />
                <Setter Property="Background" Value="#FFEEF5FD" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ToolBarButtonStyle" TargetType="{x:Type Button}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderPrimary}" />
        <Setter Property="Padding" Value="4,4,4,4" />
    </Style>

    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuBase}">
                    <AdornerDecorator>
                        <AdornerDecorator.CacheMode>
                            <BitmapCache SnapsToDevicePixels="True" EnableClearType="True" />
                        </AdornerDecorator.CacheMode>
                        <Border CornerRadius="0" BorderThickness="1" BorderBrush="{DynamicResource BorderPrimary}"
                                Background="{DynamicResource BackgroundPrimary}" Margin="0, 3">
                            <Border>
                                <ScrollViewer
                                    Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}"
                                    x:Name="SubMenuScrollViewer">
                                    <Grid Margin="0, 4" RenderOptions.ClearTypeHint="Enabled">
                                        <ItemsPresenter x:Name="ItemsPresenter"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                        KeyboardNavigation.TabNavigation="Cycle"
                                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                                        Grid.IsSharedSizeScope="True" />
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Border>
                    </AdornerDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomMenuItemStyle" BasedOn="{StaticResource {x:Type MenuItem}}" />

    <Style TargetType="{x:Type explorer:InsertObjectMenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}" />

    <Style TargetType="{x:Type MenuItem}" BasedOn="{x:Null}">
        <Setter Property="Padding" Value="5, 0" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Grid ClipToBounds="True">
                        <Border x:Name="templateRoot"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True" />
                        <Border x:Name="BackgroundRoot"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"
                                SnapsToDevicePixels="True"
                                Opacity="0" />
                        <Grid Background="Transparent" Focusable="False">
                            <Grid Height="{TemplateBinding Height}" Background="Transparent">
                                <Grid VerticalAlignment="Center"
                                      Background="Transparent"
                                      Margin="{TemplateBinding Padding}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="IconGroup" />
                                        <ColumnDefinition Width="*" SharedSizeGroup="HeaderGroup" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid x:Name="IconWrapper" Visibility="Visible" Width="22">
                                        <ContentPresenter x:Name="Icon"
                                                          Content="{TemplateBinding Icon}"
                                                          ContentSource="Icon"
                                                          HorizontalAlignment="Left" VerticalAlignment="Center"
                                                          Height="16" Width="16"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                    <Grid x:Name="GlyphWrapper" Visibility="Collapsed" Width="40">
                                        <Viewbox x:Name="GlyphPanel"
                                                 Width="16" Height="16"
                                                 HorizontalAlignment="Left"
                                                 Margin="0" Visibility="Collapsed" VerticalAlignment="Center"
                                                 FlowDirection="LeftToRight">
                                            <Canvas Width="24" Height="24">
                                                <Path Data="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"
                                                      x:Name="Glyph"
                                                      Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" />
                                            </Canvas>
                                        </Viewbox>
                                    </Grid>
                                    <Grid Grid.Column="1">
                                        <ContentPresenter x:Name="BoldHeaderPresenter"
                                                          Visibility="Hidden"
                                                          TextBlock.FontWeight="Bold"
                                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                          Content="{TemplateBinding Header}"
                                                          ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                                          ContentSource="Header"
                                                          RecognizesAccessKey="True"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                          VerticalAlignment="Center" />
                                        <ContentPresenter x:Name="HeaderPresenter"
                                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                          Content="{TemplateBinding Header}"
                                                          ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                                          ContentSource="Header"
                                                          RecognizesAccessKey="True"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                          VerticalAlignment="Center" />
                                    </Grid>
                                    <Grid x:Name="InputGestureTextWrapper"
                                          Grid.Column="2"
                                          Visibility="Collapsed">
                                        <TextBlock
                                            Visibility="{TemplateBinding InputGestureText, Converter={StaticResource StringIsEmptyVisibilityConverter}}"
                                            Margin="16 0 0 0"
                                            VerticalAlignment="Center" HorizontalAlignment="Right"
                                            Text="{TemplateBinding InputGestureText}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            Foreground="{TemplateBinding Foreground}" />
                                    </Grid>
                                    <Grid x:Name="SubBlock"
                                          Grid.Column="2"
                                          Visibility="Collapsed"
                                          Margin="16 0 0 0">
                                        <Path Width="5" Height="10"
                                              Stretch="Uniform"
                                              HorizontalAlignment="Right"
                                              VerticalAlignment="Center"
                                              Data="M0,16 L8,8 L0,0 Z"
                                              Fill="{TemplateBinding Foreground}"
                                              SnapsToDevicePixels="False" />
                                    </Grid>
                                </Grid>
                            </Grid>
                        </Grid>
                        <Popup x:Name="PART_Popup"
                               AllowsTransparency="True"
                               Focusable="False"
                               IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               PopupAnimation="None"
                               VerticalOffset="-1"
                               Placement="Bottom">
                            <!-- warning, this will cache the inner item as well, consider separating the shadow from the item if possible -->
                            <Popup.CacheMode>
                                <BitmapCache EnableClearType="True" SnapsToDevicePixels="True" />
                            </Popup.CacheMode>
                            <Border x:Name="SubMenuBorder"
                                    Background="{Binding Background, RelativeSource={RelativeSource AncestorType={x:Type MenuBase}, Mode=FindAncestor}}"
                                    BorderThickness="1"
                                    BorderBrush="{DynamicResource BorderPrimary}"
                                    CornerRadius="0">

                                <Border Background="Transparent">
                                    <ScrollViewer x:Name="SubMenuScrollViewer"
                                                  Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                        <Grid RenderOptions.ClearTypeHint="Enabled" Margin="0, 2">
                                            <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top"
                                                    Width="0">
                                                <Rectangle x:Name="OpaqueRect"
                                                           Fill="{Binding Background, ElementName=SubMenuBorder}"
                                                           Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
                                                           Width="{Binding ActualWidth, ElementName=SubMenuBorder}" />
                                            </Canvas>
                                            <ItemsPresenter x:Name="ItemsPresenter"
                                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                                            Grid.IsSharedSizeScope="True"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                            KeyboardNavigation.TabNavigation="Cycle" />
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--#region Roles Triggers -->
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter TargetName="SubBlock" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_Popup" Property="Placement" Value="Right" />
                            <Setter Property="Height" Value="24" />
                            <Setter TargetName="BoldHeaderPresenter" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="MinWidth" Value="200" />
                            <Setter Property="Height" Value="24" />
                            <Setter TargetName="InputGestureTextWrapper" Property="Visibility" Value="Visible" />
                            <Setter TargetName="BoldHeaderPresenter" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Grid.IsSharedSizeScope" Value="True" />
                            <Setter Property="Padding" Value="10, 0" />
                            <Setter Property="Height" Value="24" />
                            <Setter TargetName="templateRoot" Property="CornerRadius" Value="0" />
                            <Setter TargetName="BackgroundRoot" Property="CornerRadius" Value="0" />
                            <Setter TargetName="PART_Popup" Property="VerticalOffset" Value="-1" />
                        </Trigger>
                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Padding" Value="4, 4" />
                            <Setter Property="Height" Value="24" />
                            <Setter TargetName="templateRoot" Property="CornerRadius" Value="0" />
                            <Setter TargetName="BackgroundRoot" Property="CornerRadius" Value="0" />
                        </Trigger>
                        <!--#endregion-->

                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                            <Setter TargetName="SubMenuBorder" Property="Margin" Value="5" />
                        </Trigger>

                        <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                            <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None" />
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="IconWrapper" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsCheckable" Value="True">
                            <Setter Property="Visibility" TargetName="GlyphWrapper" Value="Visible" />
                            <Setter Property="Visibility" TargetName="IconWrapper" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AccentPrimary}" />
                            <Setter TargetName="HeaderPresenter" Property="TextBlock.Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".56" />
                        </Trigger>
                        <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                            <Setter Property="Canvas.Top" TargetName="OpaqueRect"
                                    Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}" />
                            <Setter Property="Canvas.Left" TargetName="OpaqueRect"
                                    Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment"
                Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="8" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Margin="{TemplateBinding Margin}"
                            ClipToBounds="{TemplateBinding ClipToBounds}">
                        <Grid>
                            <Border x:Name="MouseOverBorder"
                                    Opacity="0"
                                    Background="{DynamicResource AccentPrimary}" />
                            <Border x:Name="SelectedBorder"
                                    Opacity="0"
                                    Background="{DynamicResource AccentPrimary}" />
                            <materialDesign:Ripple Feedback="White"
                                                   Focusable="False"
                                                   Content="{TemplateBinding Content}"
                                                   ContentTemplate="{TemplateBinding ContentTemplate}"
                                                   ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                   Padding="{TemplateBinding Padding}"
                                                   Panel.ZIndex="10" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="SelectedBorder" Property="Opacity" Value="1" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MouseOverBorder" Property="Opacity" Value="1" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Apply style to all ListBoxItems -->
    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource CustomListBoxItem}" />

    <ControlTemplate x:Key="CustomNumericUpDown" TargetType="{x:Type Controls:NumericUpDown}">
        <Grid VerticalAlignment="{TemplateBinding VerticalAlignment}"
              Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition
                    Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}}"
                    MaxWidth="40" />
                <ColumnDefinition
                    Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}}"
                    MaxWidth="40" />
            </Grid.ColumnDefinitions>

            <Border x:Name="Background"
                    Grid.ColumnSpan="3"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}" />
            <ScrollViewer VerticalScrollBarVisibility="Hidden"
                          HorizontalScrollBarVisibility="Auto"
                          IsTabStop="False">
                <TextBox x:Name="PART_TextBox"
                         HorizontalAlignment="Stretch"
                         HorizontalContentAlignment="Right"
                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                         SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                         BorderThickness="0"
                         Background="{x:Null}"
                         Focusable="True"
                         IsReadOnly="{TemplateBinding IsReadOnly}"
                         FontFamily="{TemplateBinding FontFamily}"
                         FontSize="{TemplateBinding FontSize}" />
            </ScrollViewer>
            <RepeatButton x:Name="PART_NumericUp"
                          Grid.Column="1"
                          MinWidth="20"
                          Margin="2,2,0,2"
                          IsTabStop="False">
                <Path x:Name="PolygonUp"
                      Width="14"
                      Height="14"
                      Stretch="Fill"
                      Fill="{DynamicResource BlackBrush}"
                      Data="F1 M 35,19L 41,19L 41,35L 57,35L 57,41L 41,41L 41,57L 35,57L 35,41L 19,41L 19,35L 35,35L 35,19 Z " />
            </RepeatButton>
            <RepeatButton x:Name="PART_NumericDown"
                          Grid.Column="2"
                          MinWidth="20"
                          Margin="0,2,2,2"
                          VerticalContentAlignment="Center"
                          IsTabStop="False">
                <Path x:Name="PolygonDown"
                      Width="14"
                      Height="3"
                      Stretch="Fill"
                      Fill="{DynamicResource BlackBrush}"
                      Data="F1 M 19,38L 57,38L 57,44L 19,44L 19,38 Z " />
            </RepeatButton>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsReadOnly"
                     Value="True">
                <Setter TargetName="PART_TextBox"
                        Property="IsHitTestVisible"
                        Value="False" />
            </Trigger>
            <Trigger Property="IsMouseOver"
                     Value="True"
                     SourceName="PART_NumericUp">
                <Setter TargetName="PART_NumericUp"
                        Property="Background"
                        Value="{DynamicResource GrayBrush8}" />
                <Setter TargetName="PART_NumericUp"
                        Property="Foreground"
                        Value="{DynamicResource AccentColorBrush}" />
            </Trigger>
            <Trigger Property="IsPressed"
                     Value="True"
                     SourceName="PART_NumericUp">
                <Setter TargetName="PART_NumericUp"
                        Property="Background"
                        Value="{DynamicResource BlackBrush}" />
                <Setter TargetName="PART_NumericUp"
                        Property="Foreground"
                        Value="{DynamicResource WhiteBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver"
                     Value="True"
                     SourceName="PART_NumericDown">
                <Setter TargetName="PART_NumericDown"
                        Property="Background"
                        Value="{DynamicResource GrayBrush8}" />
                <Setter TargetName="PART_NumericDown"
                        Property="Foreground"
                        Value="{DynamicResource AccentColorBrush}" />
            </Trigger>
            <Trigger Property="IsPressed"
                     Value="True"
                     SourceName="PART_NumericDown">
                <Setter TargetName="PART_NumericDown"
                        Property="Background"
                        Value="{DynamicResource BlackBrush}" />
                <Setter TargetName="PART_NumericDown"
                        Property="Foreground"
                        Value="{DynamicResource WhiteBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver"
                     Value="true"
                     SourceName="PART_TextBox">
                <Setter Property="BorderBrush"
                        Value="{StaticResource TextBoxBackgroundSelected}" />
            </Trigger>
            <Trigger Property="IsFocused"
                     Value="true"
                     SourceName="PART_TextBox">
                <Setter Property="BorderBrush"
                        Value="{StaticResource TextBoxBackgroundSelected}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle StrokeDashArray="1 2" StrokeThickness="1"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               SnapsToDevicePixels="true" Margin="2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFF0F0F0" Offset="0.0" />
        <GradientStop Color="#FFE5E5E5" Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC" />
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3" />
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent" />
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent" />
    <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000" />
    <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFECF4FC" Offset="0.0" />
        <GradientStop Color="#FFDCECFC" Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA" />
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA" />
    <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFEBF4FC" Offset="0.0" />
        <GradientStop Color="#FFDCECFC" Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA" />
    <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000" />
    <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFDAECFC" Offset="0.0" />
        <GradientStop Color="#FFC4E0FC" Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5" />
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5" />
    <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFDAEBFC" Offset="0.0" />
        <GradientStop Color="#FFC4E0FC" Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent" />
    <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060" />
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot" SnapsToDevicePixels="true"
                            Background="{StaticResource ComboBox.Static.Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{StaticResource ComboBox.Static.Border}">
                        <Border x:Name="splitBorder"
                                Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                SnapsToDevicePixels="true" Margin="0" HorizontalAlignment="Right" BorderThickness="1"
                                BorderBrush="Transparent">
                            <Path x:Name="arrow" VerticalAlignment="Center" Margin="0" HorizontalAlignment="Center"
                                  Fill="{StaticResource ComboBox.Static.Glyph}"
                                  Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="true" />
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                           Value="false" />
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
                                           Value="false" />
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                           Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.Static.Editable.Background}" />
                            <Setter Property="BorderBrush" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.Static.Editable.Border}" />
                            <Setter Property="Background" TargetName="splitBorder"
                                    Value="{StaticResource ComboBox.Static.Editable.Button.Background}" />
                            <Setter Property="BorderBrush" TargetName="splitBorder"
                                    Value="{StaticResource ComboBox.Static.Editable.Button.Border}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="arrow"
                                    Value="{StaticResource ComboBox.MouseOver.Glyph}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                           Value="true" />
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.MouseOver.Background}" />
                            <Setter Property="BorderBrush" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.MouseOver.Border}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                           Value="true" />
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.MouseOver.Editable.Background}" />
                            <Setter Property="BorderBrush" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.MouseOver.Editable.Border}" />
                            <Setter Property="Background" TargetName="splitBorder"
                                    Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}" />
                            <Setter Property="BorderBrush" TargetName="splitBorder"
                                    Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
                                           Value="true" />
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.Pressed.Background}" />
                            <Setter Property="BorderBrush" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.Pressed.Border}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
                                           Value="true" />
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.Pressed.Editable.Background}" />
                            <Setter Property="BorderBrush" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.Pressed.Editable.Border}" />
                            <Setter Property="Background" TargetName="splitBorder"
                                    Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}" />
                            <Setter Property="BorderBrush" TargetName="splitBorder"
                                    Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                           Value="false" />
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.Disabled.Background}" />
                            <Setter Property="BorderBrush" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.Disabled.Border}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                           Value="false" />
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.Disabled.Editable.Background}" />
                            <Setter Property="BorderBrush" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.Disabled.Editable.Border}" />
                            <Setter Property="Background" TargetName="splitBorder"
                                    Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}" />
                            <Setter Property="BorderBrush" TargetName="splitBorder"
                                    Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                  Width="0" />
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2"
                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                   Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                   Placement="Bottom">
                <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent"
                                               MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                               MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                    <Border x:Name="dropDownBorder"
                            BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                            BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top"
                                        Width="0">
                                    <Rectangle x:Name="opaqueRect"
                                               Fill="{Binding Background, ElementName=dropDownBorder}"
                                               Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                               Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Themes:SystemDropShadowChrome>
            </Popup>
            <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
                          Grid.ColumnSpan="2"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          Style="{StaticResource ComboBoxToggleButton}" />
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                              Content="{TemplateBinding SelectionBoxItem}"
                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              IsHitTestVisible="false" Margin="{TemplateBinding Padding}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5" />
                <Setter Property="Color" TargetName="shadow" Value="#71000000" />
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect"
                        Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter Property="Canvas.Left" TargetName="opaqueRect"
                        Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF" />
    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false"
                                  HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                  Width="0" />
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2"
                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                   Placement="Bottom">
                <Grid x:Name="shadow" MaxHeight="{TemplateBinding MaxDropDownHeight}"
                      MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                    <Border x:Name="dropDownBorder" BorderBrush="#CCC" BorderThickness="1"
                            Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top"
                                        Width="0">
                                    <Rectangle x:Name="opaqueRect"
                                               Fill="{Binding Background, ElementName=dropDownBorder}"
                                               Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                               Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Grid>
            </Popup>
            <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
                          Grid.ColumnSpan="2"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          Style="{StaticResource ComboBoxToggleButton}" />
            <Border x:Name="border" Background="{StaticResource TextBox.Static.Background}"
                    Margin="{TemplateBinding BorderThickness}">
                <TextBox x:Name="PART_EditableTextBox" AcceptsReturn="True"
                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                         IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                         Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}"
                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" TargetName="border" Value="0.56" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
            <!--<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
            </Trigger>-->
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect"
                        Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter Property="Canvas.Left" TargetName="opaqueRect"
                        Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Padding" Value="6,3,5,3" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}" />
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Padding" Value="2" />
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>