<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:dEditor.Styles.Controls"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">

    <Style TargetType="{x:Type MenuItem}" BasedOn="{x:Null}">
        <Setter Property="Padding" Value="5, 0" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Grid ClipToBounds="True">
                        <Border x:Name="templateRoot"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True" />
                        <Border x:Name="BackgroundRoot"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"
                                SnapsToDevicePixels="True"
                                Opacity="0" />
                        <Grid Background="Transparent" Focusable="False">
                            <Grid Height="{TemplateBinding Height}" Background="Transparent">
                                <Grid VerticalAlignment="Center"
                                      Background="Transparent"
                                      Margin="{TemplateBinding Padding}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="IconGroup" />
                                        <ColumnDefinition Width="*" SharedSizeGroup="HeaderGroup" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid x:Name="IconWrapper" Visibility="Visible" Width="22">
                                        <ContentPresenter x:Name="Icon"
                                                          Content="{TemplateBinding Icon}"
                                                          ContentSource="Icon"
                                                          HorizontalAlignment="Left" VerticalAlignment="Center"
                                                          Height="16" Width="16"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                    <Grid x:Name="GlyphWrapper" Visibility="Collapsed" Width="40">
                                        <Viewbox x:Name="GlyphPanel"
                                                 Width="16" Height="16"
                                                 HorizontalAlignment="Left"
                                                 Margin="0" Visibility="Collapsed" VerticalAlignment="Center"
                                                 FlowDirection="LeftToRight">
                                            <Canvas Width="24" Height="24">
                                                <Path Data="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"
                                                      x:Name="Glyph"
                                                      Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" />
                                            </Canvas>
                                        </Viewbox>
                                    </Grid>
                                    <Grid Grid.Column="1">
                                        <ContentPresenter x:Name="BoldHeaderPresenter"
                                                          Visibility="Hidden"
                                                          TextBlock.FontWeight="Bold"
                                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                          Content="{TemplateBinding Header}"
                                                          ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                                          ContentSource="Header"
                                                          RecognizesAccessKey="True"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                          VerticalAlignment="Center" />
                                        <ContentPresenter x:Name="HeaderPresenter"
                                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                          Content="{TemplateBinding Header}"
                                                          ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                                          ContentSource="Header"
                                                          RecognizesAccessKey="True"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                          VerticalAlignment="Center" />
                                    </Grid>
                                    <Grid x:Name="InputGestureTextWrapper"
                                          Grid.Column="2"
                                          Visibility="Collapsed">
                                        <TextBlock
                                            Visibility="{TemplateBinding InputGestureText, Converter={StaticResource StringIsEmptyVisibilityConverter}}"
                                            Margin="16 0 0 0"
                                            VerticalAlignment="Center" HorizontalAlignment="Right"
                                            Text="{TemplateBinding InputGestureText}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            Foreground="{TemplateBinding Foreground}" />
                                    </Grid>
                                    <Grid x:Name="SubBlock"
                                          Grid.Column="2"
                                          Visibility="Collapsed"
                                          Margin="16 0 0 0">
                                        <Path Width="5" Height="10"
                                              Stretch="Uniform"
                                              HorizontalAlignment="Right"
                                              VerticalAlignment="Center"
                                              Data="M0,16 L8,8 L0,0 Z"
                                              Fill="{TemplateBinding Foreground}"
                                              SnapsToDevicePixels="False" />
                                    </Grid>
                                </Grid>
                            </Grid>
                        </Grid>
                        <Popup x:Name="PART_Popup"
                               AllowsTransparency="True"
                               Focusable="False"
                               IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               PopupAnimation="None"
                               VerticalOffset="-1"
                               Placement="Bottom">
                            <!-- warning, this will cache the inner item as well, consider separating the shadow from the item if possible -->
                            <Popup.CacheMode>
                                <BitmapCache EnableClearType="True" SnapsToDevicePixels="True" />
                            </Popup.CacheMode>
                            <Border x:Name="SubMenuBorder"
                                    Background="{Binding Background, RelativeSource={RelativeSource AncestorType={x:Type MenuBase}, Mode=FindAncestor}}"
                                    BorderThickness="1"
                                    BorderBrush="{DynamicResource BorderPrimary}"
                                    CornerRadius="0">

                                <Border Background="Transparent">
                                    <ScrollViewer x:Name="SubMenuScrollViewer"
                                                  Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                        <Grid RenderOptions.ClearTypeHint="Enabled" Margin="0, 2">
                                            <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top"
                                                    Width="0">
                                                <Rectangle x:Name="OpaqueRect"
                                                           Fill="{Binding Background, ElementName=SubMenuBorder}"
                                                           Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
                                                           Width="{Binding ActualWidth, ElementName=SubMenuBorder}" />
                                            </Canvas>
                                            <ItemsPresenter x:Name="ItemsPresenter"
                                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                                            Grid.IsSharedSizeScope="True"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                            KeyboardNavigation.TabNavigation="Cycle" />
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--#region Roles Triggers -->
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter TargetName="SubBlock" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_Popup" Property="Placement" Value="Right" />
                            <Setter Property="Height" Value="24" />
                            <Setter TargetName="BoldHeaderPresenter" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="MinWidth" Value="200" />
                            <Setter Property="Height" Value="24" />
                            <Setter TargetName="InputGestureTextWrapper" Property="Visibility" Value="Visible" />
                            <Setter TargetName="BoldHeaderPresenter" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Grid.IsSharedSizeScope" Value="True" />
                            <Setter Property="Padding" Value="10, 0" />
                            <Setter Property="Height" Value="24" />
                            <Setter TargetName="templateRoot" Property="CornerRadius" Value="0" />
                            <Setter TargetName="BackgroundRoot" Property="CornerRadius" Value="0" />
                            <Setter TargetName="PART_Popup" Property="VerticalOffset" Value="-1" />
                        </Trigger>
                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Padding" Value="4, 4" />
                            <Setter Property="Height" Value="24" />
                            <Setter TargetName="templateRoot" Property="CornerRadius" Value="0" />
                            <Setter TargetName="BackgroundRoot" Property="CornerRadius" Value="0" />
                        </Trigger>
                        <!--#endregion-->

                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                            <Setter TargetName="SubMenuBorder" Property="Margin" Value="5" />
                        </Trigger>

                        <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                            <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None" />
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="IconWrapper" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsCheckable" Value="True">
                            <Setter Property="Visibility" TargetName="GlyphWrapper" Value="Visible" />
                            <Setter Property="Visibility" TargetName="IconWrapper" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter Property="Background" Value="{StaticResource BackgroundSecondary}" />
                            <Setter TargetName="HeaderPresenter" Property="TextBlock.Foreground" Value="{StaticResource TextColourPrimary}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".56" />
                        </Trigger>
                        <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                            <Setter Property="Canvas.Top" TargetName="OpaqueRect"
                                    Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}" />
                            <Setter Property="Canvas.Left" TargetName="OpaqueRect"
                                    Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment"
                Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="8" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Margin="{TemplateBinding Margin}"
                            ClipToBounds="{TemplateBinding ClipToBounds}">
                        <Grid>
                            <Border x:Name="MouseOverBorder"
                                    Opacity="0"
                                    Background="{DynamicResource BackgroundSecondary}" />
                            <Border x:Name="SelectedBorder"
                                    Opacity="0"
                                    Background="{DynamicResource BackgroundSecondary}" />
                            <materialDesign:Ripple Feedback="White"
                                                   Focusable="False"
                                                   Content="{TemplateBinding Content}"
                                                   ContentTemplate="{TemplateBinding ContentTemplate}"
                                                   ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                   Padding="{TemplateBinding Padding}"
                                                   Panel.ZIndex="10" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="SelectedBorder" Property="Opacity" Value="1" />
                            <Setter Property="Foreground" Value="{StaticResource TextColourPrimary}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MouseOverBorder" Property="Opacity" Value="1" />
                            <Setter Property="Foreground" Value="{StaticResource TextColourPrimary}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Apply style to all ListBoxItems -->
    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource CustomListBoxItem}" />

</ResourceDictionary>